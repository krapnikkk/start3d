{"version":3,"file":"start3d.js","sources":["../src/gl/gl.ts","../src/gl/shader/shader.ts"],"sourcesContent":["let gl:WebGLRenderingContext;\r\nlet canvas:HTMLCanvasElement;\r\nconst init = (canvasId?:string)=>{\r\n    if(canvasId){\r\n        canvas = document.getElementById(canvasId) as HTMLCanvasElement;\r\n        if(canvas === undefined){\r\n            throw new Error(\"Cannot find a canvas element by Id:\" + canvasId);\r\n        }\r\n    }else{\r\n        canvas = document.createElement(\"canvas\");\r\n        canvas.id = \"start3d\";\r\n        document.body.appendChild(canvas);\r\n    }\r\n    canvas.width = Math.floor(canvas.clientWidth * window.devicePixelRatio);\r\n    canvas.height = Math.floor(canvas.clientHeight * window.devicePixelRatio);\r\n    \r\n    gl = canvas.getContext(\"webgl\")!;\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport {init,gl,canvas}","import { gl } from \"../gl\";\r\n\r\nexport class Shader {\r\n    private _name: string;\r\n    private _program: WebGLProgram;\r\n    private _attributes: { [name: string]: number } = {};\r\n    private _uniforms: { [name: string]: WebGLUniformLocation } = {};\r\n    constructor(name: string) {\r\n        this._name = name;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    protected load(vertexSource: string, fragmentSource: string) {\r\n        let vertexShader = this.loadShader(vertexSource, gl.VERTEX_SHADER);\r\n        let fragmentShader = this.loadShader(fragmentSource, gl.FRAGMENT_SHADER);\r\n        this.createProgram(vertexShader, fragmentShader);\r\n\r\n        this.detectAttributes();\r\n        this.detectUniforms();\r\n    }\r\n\r\n    private loadShader(source: string, type: GLenum): WebGLShader {\r\n        let shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            let error = gl.getShaderInfoLog(shader);\r\n            if (error !== \"\") {\r\n                throw new Error(\"Error compiling shader:\" + error);\r\n            }\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    private createProgram(vertexShader: WebGLShader, fragmentShader: WebGLShader): void {\r\n        this._program = gl.createProgram();\r\n\r\n        gl.attachShader(this._program, vertexShader);\r\n        gl.attachShader(this._program, fragmentShader);\r\n\r\n        gl.linkProgram(this._program);\r\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\r\n            let error = gl.getProgramInfoLog(this._program);\r\n            if (error !== \"\") {\r\n                throw new Error(\"Error linking shader \" + this._name + \":\" + error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private detectAttributes(): void {\r\n        let attributeCount = gl.getProgramParameter(this._program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < attributeCount; i++) {\r\n            let attributeInfo: WebGLActiveInfo = gl.getActiveAttrib(this._program, i);\r\n            if (!attributeInfo) {\r\n                break;\r\n            }\r\n            let name = attributeInfo.name;\r\n            this._attributes[name] = gl.getAttribLocation(this._program, name);\r\n        }\r\n    }\r\n\r\n    private detectUniforms(): void {\r\n        let attributeCount = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\r\n        for (let i = 0; i < attributeCount; i++) {\r\n            let uniformInfo: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\r\n            if (!uniformInfo) {\r\n                break;\r\n            }\r\n            let name = uniformInfo.name;\r\n            this._uniforms[name] = gl.getUniformLocation(this._program, name);\r\n\r\n        }\r\n    }\r\n\r\n    public getAttributeLocation(name: string): number {\r\n        let attribute = this._attributes[name];\r\n        if (attribute === undefined) {\r\n            throw new Error(`Unable to find attribute named ${name} in shader named '${this._name}'`)\r\n        }\r\n        return attribute;\r\n    }\r\n\r\n    public getUniformLocation(name: string): WebGLUniformLocation {\r\n        let uniform = this._uniforms[name];\r\n        if (uniform === undefined) {\r\n            throw new Error(`Unable to find uniform named ${name} in shader named '${this._name}'`)\r\n        }\r\n        return uniform;\r\n    }\r\n\r\n\r\n    public use(): void {\r\n        gl.useProgram(this._program);\r\n    }\r\n\r\n}"],"names":["gl","canvas"],"mappings":";;;;;;AAAIA,wBAAyB;AACzBC,4BAAyB;QACvB,IAAI,GAAG,UAAC,QAAgB;QAC1B,IAAG,QAAQ,EAAC;YACRA,cAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB,CAAC;YAChE,IAAGA,cAAM,KAAK,SAAS,EAAC;gBACpB,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,QAAQ,CAAC,CAAC;aACrE;SACJ;aAAI;YACDA,cAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1CA,cAAM,CAAC,EAAE,GAAG,SAAS,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAACA,cAAM,CAAC,CAAC;SACrC;QACDA,cAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAACA,cAAM,CAAC,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACxEA,cAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAACA,cAAM,CAAC,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAE1ED,UAAE,GAAGC,cAAM,CAAC,UAAU,CAAC,OAAO,CAAE,CAAC;QACjCD,UAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEC,cAAM,CAAC,KAAK,EAAEA,cAAM,CAAC,MAAM,CAAC,CAAC;IACnD;;;QCXI,gBAAY,IAAY;YAFhB,gBAAW,GAA+B,EAAE,CAAC;YAC7C,cAAS,GAA6C,EAAE,CAAC;YAE7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QAED,sBAAW,wBAAI;iBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QAES,qBAAI,GAAd,UAAe,YAAoB,EAAE,cAAsB;YACvD,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAED,UAAE,CAAC,aAAa,CAAC,CAAC;YACnE,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAEA,UAAE,CAAC,eAAe,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;YAEjD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QAEO,2BAAU,GAAlB,UAAmB,MAAc,EAAE,IAAY;YAC3C,IAAI,MAAM,GAAGA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACnCA,UAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAChCA,UAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAACA,UAAE,CAAC,kBAAkB,CAAC,MAAM,EAAEA,UAAE,CAAC,cAAc,CAAC,EAAE;gBACnD,IAAI,KAAK,GAAGA,UAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,KAAK,KAAK,EAAE,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,KAAK,CAAC,CAAC;iBACtD;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;QAEO,8BAAa,GAArB,UAAsB,YAAyB,EAAE,cAA2B;YACxE,IAAI,CAAC,QAAQ,GAAGA,UAAE,CAAC,aAAa,EAAE,CAAC;YAEnCA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC7CA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAE/CA,UAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAACA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,WAAW,CAAC,EAAE;gBACxD,IAAI,KAAK,GAAGA,UAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,KAAK,KAAK,EAAE,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;iBACvE;aACJ;SACJ;QAEO,iCAAgB,GAAxB;YACI,IAAI,cAAc,GAAGA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,iBAAiB,CAAC,CAAC;YACjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,aAAa,GAAoBA,UAAE,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,aAAa,EAAE;oBAChB,MAAM;iBACT;gBACD,IAAI,MAAI,GAAG,aAAa,CAAC,IAAI,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,MAAI,CAAC,GAAGA,UAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAI,CAAC,CAAC;aACtE;SACJ;QAEO,+BAAc,GAAtB;YACI,IAAI,cAAc,GAAGA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,eAAe,CAAC,CAAC;YAC/E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,WAAW,GAAoBA,UAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACzE,IAAI,CAAC,WAAW,EAAE;oBACd,MAAM;iBACT;gBACD,IAAI,MAAI,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,MAAI,CAAC,GAAGA,UAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAI,CAAC,CAAC;aAErE;SACJ;QAEM,qCAAoB,GAA3B,UAA4B,IAAY;YACpC,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,SAAS,KAAK,SAAS,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,yCAAkC,IAAI,+BAAqB,IAAI,CAAC,KAAK,MAAG,CAAC,CAAA;aAC5F;YACD,OAAO,SAAS,CAAC;SACpB;QAEM,mCAAkB,GAAzB,UAA0B,IAAY;YAClC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACvB,MAAM,IAAI,KAAK,CAAC,uCAAgC,IAAI,+BAAqB,IAAI,CAAC,KAAK,MAAG,CAAC,CAAA;aAC1F;YACD,OAAO,OAAO,CAAC;SAClB;QAGM,oBAAG,GAAV;YACIA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;QAEL,aAAC;IAAD,CAAC;;;;;;;;;;;"}