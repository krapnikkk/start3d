{"version":3,"file":"start3d.js","sources":["../src/gl/gl.ts","../src/gl/shader.ts","../src/gl/vertexFormat.ts","../src/gl/vertexBuffer.ts","../src/gl/indexBuffer.ts","../src/gl/mesh.ts"],"sourcesContent":["let gl: WebGLRenderingContext;\nlet canvas: HTMLCanvasElement;\nconst init = (canvasId?: string) => {\n    if (canvasId) {\n        canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n        if (canvas === undefined) {\n            throw new Error(\"Cannot find a canvas element by Id:\" + canvasId);\n        }\n    } else {\n        canvas = document.createElement(\"canvas\");\n        canvas.id = \"start3d\";\n        document.body.appendChild(canvas);\n    }\n    canvas.setAttribute(\n        \"style\",\n        `position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%,-50%);\n        width: 100vw;\n        height: 100vh;\n        display: block;`\n    );\n    canvas.width = Math.floor(canvas.clientWidth * window.devicePixelRatio);\n    canvas.height = Math.floor(canvas.clientHeight * window.devicePixelRatio);\n\n    gl = canvas.getContext(\"webgl\")!;\n    // gl.viewport(0, 0, canvas.width, canvas.height);\n}\n\nexport { init, gl, canvas }","import { gl } from \"./gl\";\n\nclass UniformInfo {\n    public name: string;\n    public location: WebGLUniformLocation;\n    public type: number;\n    public size: number;\n    public isArray: boolean;\n    constructor(name: string, location: WebGLUniformLocation, type: number, size: number, isArray: boolean) {\n        this.name = name;\n        this.location = location;\n        this.type = type;\n        this.size = size;\n        this.isArray = isArray;\n    }\n}\n\nexport class Shader {\n    private _program: WebGLProgram;\n    private _attributes: { [name: string]: number } = {};\n    private _uniforms: { [name: string]: UniformInfo } = {};\n    private _semanticToAttribMap:{[name:string]:string} = {};\n\n    public mapAttributeSemantic(semantic:string,attribName:string):void{\n        this._semanticToAttribMap[semantic] = attribName;\n    }\n\n    protected load(vertexSource: string, fragmentSource: string) {\n        let vertexShader = this.loadShader(vertexSource, gl.VERTEX_SHADER);\n        let fragmentShader = this.loadShader(fragmentSource, gl.FRAGMENT_SHADER);\n        this.createProgram(vertexShader, fragmentShader);\n\n        this.queryAttributes();\n        this.queryUniforms();\n    }\n\n    private loadShader(source: string, type: GLenum): WebGLShader {\n        let shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = gl.getShaderInfoLog(shader);\n            if (error !== \"\") {\n                throw new Error(\"Error compiling shader:\" + error);\n            }\n        }\n        return shader;\n    }\n\n    private createProgram(vertexShader: WebGLShader, fragmentShader: WebGLShader): void {\n        this._program = gl.createProgram();\n\n        gl.attachShader(this._program, vertexShader);\n        gl.attachShader(this._program, fragmentShader);\n\n        gl.linkProgram(this._program);\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            let error = gl.getProgramInfoLog(this._program);\n            if (error !== \"\") {\n                throw new Error('Failed to link program: ' + error);\n            }\n        }\n    }\n\n    public queryAttributes() {\n        let attributeCount = gl.getProgramParameter(this._program, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            let info: WebGLActiveInfo = gl.getActiveAttrib(this._program, i);\n            if (!info) {\n                break;\n            }\n            this._attributes[info.name] = gl.getAttribLocation(this._program, info.name);\n        }\n    }\n\n    public queryUniforms() {\n        let uniformCount = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(this._program, i);\n            if (!info) {\n                break;\n            }\n            let location = gl.getUniformLocation(this._program, info.name);\n            let isArray = info.size > 1 && info.name.substr(-3) === '[0]';\n            let uniformInfo = new UniformInfo(info.name, location, info.type, info.size, isArray)\n            this._uniforms[info.name] = uniformInfo;\n        }\n    }\n\n    public getAttributeLocation(semantic: string): number {\n        let name = this._semanticToAttribMap[semantic];\n        if(name){\n            let location = this._attributes[name];\n            return location;\n        } else {\n            console.error('Shader: can not find attribute for semantic '+semantic);\n            return -1;\n        }\n    }\n\n    public setUniform(name: string, value: Float32List | number): void {\n        let info = this._uniforms[name];\n        if (info === null) {\n            console.error(\"can not find uniform named \" + name);\n            return;\n        }\n        switch (info.type) {\n            case gl.FLOAT:\n                if (info.isArray) {\n                    gl.uniform1fv(info.location, value as Float32List);\n                } else {\n                    gl.uniform1f(info.location, value as number);\n                }\n                break;\n            case gl.FLOAT_VEC2:\n                gl.uniform2fv(info.location, value as Float32List);\n                break;\n            case gl.FLOAT_VEC3:\n                gl.uniform3fv(info.location, value as Float32List);\n                break;\n            case gl.FLOAT_VEC4:\n                gl.uniform4fv(info.location, value as Float32List);\n                break;\n            case gl.FLOAT_MAT4:\n                gl.uniformMatrix4fv(info.location,false, value as Float32List);\n                break;\n            default:\n                console.error(\"uniform type not support \", info.type);\n                break;\n        }\n    }\n\n\n    public use(): void {\n        if (this._program) {\n            gl.useProgram(this._program);\n        } else {\n            console.error(\"create progarm first!\");\n        }\n    }\n\n}","// 语义化vertex shader中常见attribute\nenum VertexSemantic {\n    POSITION = \"position\",\n    NORMAL = \"normal\",\n    TANGENT = \"tangent\",\n    COLOR = \"color\",\n    UV0 = \"uv0\",\n    UV1 = \"uv1\",\n    UV2 = \"uv2\",\n    UV3 = \"uv3\",\n}\n\nclass VertexFormat {\n    private _vertexSize: number = 0;\n    public attribs: string[] = [];\n    public attribSizeMap: {} = {};\n\n    constructor() {\n\n    }\n\n    public get attribCount():number{\n        return this.attribs.length;\n    }\n\n    addAttrib(attribSemantic: string, size: number): void {\n        this.attribs.push(attribSemantic);\n        this.attribSizeMap[attribSemantic] = size;\n    }\n\n    getVertexSize():number{\n        this.updateVertexSize();\n        return this._vertexSize;\n    }\n\n    updateVertexSize():void{\n        // if(this._vertexSize === 0){\n            this._vertexSize = 0;\n            for(let i = 0;i<this.attribs.length;i++){\n                let semantic = this.attribs[i];\n                this._vertexSize += this.attribSizeMap[semantic];\n            }\n        // }\n    }\n}\n\nexport { VertexFormat, VertexSemantic };","import { Shader } from \"./shader\";\nimport { gl } from \"./gl\";\nimport { VertexFormat, VertexSemantic } from \"./vertexFormat\";\n\n\nclass VertexAttribInfo {\n    public offset: number = 0;\n    public size: number = 0;\n    public semantic: string;\n    public data: Array<number> = null;\n\n    constructor(attribSemantic: string, attribSize: number) {\n        this.semantic = attribSemantic;\n        this.size = attribSize;\n    }\n}\n\nclass VertexBuffer {\n    private _vertexCount: number = 0;\n    private _vertexStride: number = 0; // 步进\n    private _vertexFormat: VertexFormat;\n    private _attribInfoMap: { [key: string]: VertexAttribInfo } = {};\n    private _vbo: WebGLBuffer = gl.createBuffer();\n    private _bufferData: Array<number> = null;\n\n    public BYTES_PER_ELEMENT: number = 4; // // for Float32Array\n\n    public constructor(vertexFormat: VertexFormat) {\n        this._vertexFormat = vertexFormat;\n        let attribCount = this._vertexFormat.attribCount;\n        for (let i = 0; i < attribCount; i++) {\n            let semantic = this._vertexFormat.attribs[i];\n            let size = this._vertexFormat.attribSizeMap[semantic];\n            if (size === null) {\n                console.error(\"VertexBuffer: bad semantic!\");\n            } else {\n                let info = new VertexAttribInfo(semantic, size);\n                this._attribInfoMap[semantic] = info;\n            }\n        }\n    }\n\n    get vbo(): WebGLBuffer {\n        return this._vbo;\n    }\n\n    get vertexCount(): number {\n        return this._vertexCount;\n    }\n\n    get vertexStride(): number {\n        return this._vertexStride;\n    }\n\n    public setData(semantic:string,data:number[]):void{\n        this._attribInfoMap[semantic].data = data;\n    }\n\n    private _compile(): void {\n        let position = this._attribInfoMap[VertexSemantic.POSITION];\n        if (position === null) {\n            console.error(\"VertexBuffer: no attribute position!\");\n        }\n        if (position.data === null || position.data.length === 0) {\n            console.error(\"VertexBuffer: position data is empty!\");\n            return;\n        }\n\n        // calculate the vertex count\n        this._vertexCount = position.data.length / position.size;\n        this._vertexStride = this._vertexFormat.getVertexSize() * this.BYTES_PER_ELEMENT;\n\n\n        this._bufferData = [];\n        for (let i = 0; i < this._vertexCount; i++) {\n            for (let semantic of this._vertexFormat.attribs) {\n                let info = this._attribInfoMap[semantic];\n                if (info === null || info.data === null) {\n                    console.error(\"VertexBuffer: bad semantic \" + semantic);\n                    continue;\n                }\n                for (let k = 0; k < info.size; k++) {\n                    let val = info.data[i * info.size + k];\n                    if (val === undefined) {\n                        console.error(\"VertexBuffer: missing value for \" + semantic);\n                    }\n                    this._bufferData.push(val);\n                }\n            }\n        }\n\n        let offset = 0;\n        for (let semantic of this._vertexFormat.attribs) {\n            let info = this._attribInfoMap[semantic];\n            info.offset = offset;\n            info.data = null;\n            offset += info.size * this.BYTES_PER_ELEMENT;\n        }\n    }\n\n    upload(): void {\n        this._compile();\n\n        let buffer = new Float32Array(this._bufferData);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        this._bufferData = null;\n    }\n\n    bindAttrib(shader: Shader) {\n        for (let semantic of this._vertexFormat.attribs) {\n            let info = this._attribInfoMap[semantic];\n            let location = shader.getAttributeLocation(semantic);\n            if (location >= 0) {\n                gl.vertexAttribPointer(\n                    location, // index\n                    info.size, // size\n                    gl.FLOAT, // type\n                    false, // normailzed\n                    this._vertexStride, // stride\n                    info.offset // offset\n                );\n                gl.enableVertexAttribArray(location);\n            }\n        }\n    }\n\n    unbindAttrb(shader:Shader){\n        for(let semantic of this._vertexFormat.attribs){\n            let location = shader.getAttributeLocation(semantic);\n            if(location>=0){\n                gl.disableVertexAttribArray(location);\n            }\n        }\n    }\n\n    destroy(): void {\n        gl.deleteBuffer(this._vbo);\n        this._vbo = 0;\n    }\n}\n\nexport { VertexBuffer, VertexAttribInfo }","import {gl} from \"./gl\";\n\nclass IndexBuffer{\n    private _indexCount:number = 0 ;\n    private _mode:GLenum = gl.TRIANGLES;\n    private _type:GLenum = gl.UNSIGNED_SHORT; // SEE:https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Types\n    private _ibo:WebGLBuffer = gl.createBuffer();\n    private _bufferData:Array<number> = null;\n\n    get ibo():WebGLBuffer{\n        return this._ibo;\n    }\n\n    get indexCount():number{\n        return this._indexCount;\n    }\n\n    get mode():GLenum{\n        return this._mode;\n    }\n\n    get type():GLenum{\n        return this._type;\n    }\n\n    setData(data:Array<number>):void{\n        this._bufferData = data;\n    }\n\n    upload():void{\n        if(this._bufferData==null){\n            console.error(\"buffer data is null!\");\n            return;\n        }\n        // 节省空间&防止越界\n        let useByte = this._bufferData.length<=256;\n        // 二进制数组 see：https://javascript.ruanyifeng.com/stdlib/arraybuffer.html\n        let buffer = useByte ? new Uint8Array(this._bufferData):new Uint16Array(this._bufferData);\n        this._type = useByte ? gl.UNSIGNED_BYTE : gl.UNSIGNED_SHORT;\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this._ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,buffer,gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);\n\n        this._indexCount = buffer.length;\n        this._bufferData = null;\n    }\n\n    destroy():void{\n        gl.deleteBuffer(this._ibo);\n        this._ibo = null;\n    }\n}\n\nexport {IndexBuffer};","import { gl } from \"./gl\";\nimport { IndexBuffer } from \"./indexBuffer\";\nimport { Shader } from \"./shader\";\nimport { VertexBuffer } from \"./vertexBuffer\";\nimport { VertexFormat } from \"./vertexFormat\";\n\nclass Mesh {\n    private _vertexBuffer: VertexBuffer;\n    private _indexBuffer: IndexBuffer;\n    constructor(vertexFormat: VertexFormat) {\n        this._vertexBuffer = new VertexBuffer(vertexFormat);\n    }\n\n    setVertexData(semantic: string, data: number[]) {\n        this._vertexBuffer.setData(semantic, data);\n    }\n\n    setTriangles(data: number[]) {\n        if (this._indexBuffer == null) {\n            this._indexBuffer = new IndexBuffer();\n        }\n        this._indexBuffer.setData(data);\n    }\n\n    upload() {\n        this._vertexBuffer.upload();\n        if (this._indexBuffer) {\n            this._indexBuffer.upload();\n        }\n    }\n\n    render(shader: Shader) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer.vbo);\n\n        this._vertexBuffer.bindAttrib(shader);\n\n        if (this._indexBuffer) {\n            let { ibo, type, mode, indexCount } = this._indexBuffer;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            gl.drawElements(mode, indexCount, type, 0);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        } else {\n            gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer.vertexCount);\n        }\n\n        this._vertexBuffer.unbindAttrb(shader);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n\n    destroy() {\n        this._vertexBuffer.destroy();\n        if (this._indexBuffer) {\n            this._indexBuffer.destroy();\n        }\n    }\n\n}\n\nexport { Mesh };"],"names":["gl","canvas","VertexSemantic"],"mappings":";;;;;;AAAIA,wBAA0B;AAC1BC,4BAA0B;QACxB,IAAI,GAAG,UAAC,QAAiB;QAC3B,IAAI,QAAQ,EAAE;YACVA,cAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB,CAAC;YAChE,IAAIA,cAAM,KAAK,SAAS,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,QAAQ,CAAC,CAAC;aACrE;SACJ;aAAM;YACHA,cAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1CA,cAAM,CAAC,EAAE,GAAG,SAAS,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAACA,cAAM,CAAC,CAAC;SACrC;QACDA,cAAM,CAAC,YAAY,CACf,OAAO,EACP,8KAMgB,CACnB,CAAC;QACFA,cAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAACA,cAAM,CAAC,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACxEA,cAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAACA,cAAM,CAAC,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAE1ED,UAAE,GAAGC,cAAM,CAAC,UAAU,CAAC,OAAO,CAAE,CAAC;;IAErC;;IC1BA;QAMI,qBAAY,IAAY,EAAE,QAA8B,EAAE,IAAY,EAAE,IAAY,EAAE,OAAgB;YAClG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;QACL,kBAAC;IAAD,CAAC,IAAA;;QAED;YAEY,gBAAW,GAA+B,EAAE,CAAC;YAC7C,cAAS,GAAoC,EAAE,CAAC;YAChD,yBAAoB,GAA0B,EAAE,CAAC;SAwH5D;QAtHU,qCAAoB,GAA3B,UAA4B,QAAe,EAAC,UAAiB;YACzD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;SACpD;QAES,qBAAI,GAAd,UAAe,YAAoB,EAAE,cAAsB;YACvD,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAED,UAAE,CAAC,aAAa,CAAC,CAAC;YACnE,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAEA,UAAE,CAAC,eAAe,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;YAEjD,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;QAEO,2BAAU,GAAlB,UAAmB,MAAc,EAAE,IAAY;YAC3C,IAAI,MAAM,GAAGA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACnCA,UAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAChCA,UAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACzB,IAAI,CAACA,UAAE,CAAC,kBAAkB,CAAC,MAAM,EAAEA,UAAE,CAAC,cAAc,CAAC,EAAE;gBACnD,IAAI,KAAK,GAAGA,UAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,KAAK,KAAK,EAAE,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,KAAK,CAAC,CAAC;iBACtD;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;QAEO,8BAAa,GAArB,UAAsB,YAAyB,EAAE,cAA2B;YACxE,IAAI,CAAC,QAAQ,GAAGA,UAAE,CAAC,aAAa,EAAE,CAAC;YAEnCA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC7CA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAE/CA,UAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAACA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,WAAW,CAAC,EAAE;gBACxD,IAAI,KAAK,GAAGA,UAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,IAAI,KAAK,KAAK,EAAE,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,KAAK,CAAC,CAAC;iBACvD;aACJ;SACJ;QAEM,gCAAe,GAAtB;YACI,IAAI,cAAc,GAAGA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,iBAAiB,CAAC,CAAC;YACjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,IAAI,GAAoBA,UAAE,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,IAAI,EAAE;oBACP,MAAM;iBACT;gBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAGA,UAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aAChF;SACJ;QAEM,8BAAa,GAApB;YACI,IAAI,YAAY,GAAGA,UAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAEA,UAAE,CAAC,eAAe,CAAC,CAAC;YAC7E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,IAAI,GAAGA,UAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,IAAI,EAAE;oBACP,MAAM;iBACT;gBACD,IAAI,UAAQ,GAAGA,UAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/D,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;gBAC9D,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,UAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;gBACrF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;aAC3C;SACJ;QAEM,qCAAoB,GAA3B,UAA4B,QAAgB;YACxC,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAG,IAAI,EAAC;gBACJ,IAAI,UAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACtC,OAAO,UAAQ,CAAC;aACnB;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,8CAA8C,GAAC,QAAQ,CAAC,CAAC;gBACvE,OAAO,CAAC,CAAC,CAAC;aACb;SACJ;QAEM,2BAAU,GAAjB,UAAkB,IAAY,EAAE,KAA2B;YACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,CAAC;gBACpD,OAAO;aACV;YACD,QAAQ,IAAI,CAAC,IAAI;gBACb,KAAKA,UAAE,CAAC,KAAK;oBACT,IAAI,IAAI,CAAC,OAAO,EAAE;wBACdA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAoB,CAAC,CAAC;qBACtD;yBAAM;wBACHA,UAAE,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAe,CAAC,CAAC;qBAChD;oBACD,MAAM;gBACV,KAAKA,UAAE,CAAC,UAAU;oBACdA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAoB,CAAC,CAAC;oBACnD,MAAM;gBACV,KAAKA,UAAE,CAAC,UAAU;oBACdA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAoB,CAAC,CAAC;oBACnD,MAAM;gBACV,KAAKA,UAAE,CAAC,UAAU;oBACdA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAoB,CAAC,CAAC;oBACnD,MAAM;gBACV,KAAKA,UAAE,CAAC,UAAU;oBACdA,UAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAC,KAAK,EAAE,KAAoB,CAAC,CAAC;oBAC/D,MAAM;gBACV;oBACI,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtD,MAAM;aACb;SACJ;QAGM,oBAAG,GAAV;YACI,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACfA,UAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChC;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;aAC1C;SACJ;QAEL,aAAC;IAAD,CAAC;;IC7ID;AACKE;IAAL,WAAK,cAAc;QACf,uCAAqB,CAAA;QACrB,mCAAiB,CAAA;QACjB,qCAAmB,CAAA;QACnB,iCAAe,CAAA;QACf,6BAAW,CAAA;QACX,6BAAW,CAAA;QACX,6BAAW,CAAA;QACX,6BAAW,CAAA;IACf,CAAC,EATIA,sBAAc,KAAdA,sBAAc,QASlB;;QAOG;YAJQ,gBAAW,GAAW,CAAC,CAAC;YACzB,YAAO,GAAa,EAAE,CAAC;YACvB,kBAAa,GAAO,EAAE,CAAC;SAI7B;QAED,sBAAW,qCAAW;iBAAtB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aAC9B;;;WAAA;QAED,gCAAS,GAAT,UAAU,cAAsB,EAAE,IAAY;YAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;SAC7C;QAED,oCAAa,GAAb;YACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;QAED,uCAAgB,GAAhB;;YAEQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACpD;;SAER;QACL,mBAAC;IAAD,CAAC;;ICvCD;QAMI,0BAAY,cAAsB,EAAE,UAAkB;YAL/C,WAAM,GAAW,CAAC,CAAC;YACnB,SAAI,GAAW,CAAC,CAAC;YAEjB,SAAI,GAAkB,IAAI,CAAC;YAG9B,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SAC1B;QACL,uBAAC;IAAD,CAAC,IAAA;;QAYG,sBAAmB,YAA0B;YATrC,iBAAY,GAAW,CAAC,CAAC;YACzB,kBAAa,GAAW,CAAC,CAAC;YAE1B,mBAAc,GAAwC,EAAE,CAAC;YACzD,SAAI,GAAgBF,UAAE,CAAC,YAAY,EAAE,CAAC;YACtC,gBAAW,GAAkB,IAAI,CAAC;YAEnC,sBAAiB,GAAW,CAAC,CAAC;YAGjC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACtD,IAAI,IAAI,KAAK,IAAI,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;iBAChD;qBAAM;oBACH,IAAI,IAAI,GAAG,IAAI,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAChD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;iBACxC;aACJ;SACJ;QAED,sBAAI,6BAAG;iBAAP;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;;;WAAA;QAED,sBAAI,qCAAW;iBAAf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;WAAA;QAED,sBAAI,sCAAY;iBAAhB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;WAAA;QAEM,8BAAO,GAAd,UAAe,QAAe,EAAC,IAAa;YACxC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;SAC7C;QAEO,+BAAQ,GAAhB;YACI,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAACE,sBAAc,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACnB,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACzD;YACD,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtD,OAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;gBACvD,OAAO;aACV;;YAGD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAGjF,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;gBACxC,KAAqB,UAA0B,EAA1B,KAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;oBAA5C,IAAI,QAAQ,SAAA;oBACb,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACzC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;wBACrC,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,QAAQ,CAAC,CAAC;wBACxD,SAAS;qBACZ;oBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;wBAChC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;wBACvC,IAAI,GAAG,KAAK,SAAS,EAAE;4BACnB,OAAO,CAAC,KAAK,CAAC,kCAAkC,GAAG,QAAQ,CAAC,CAAC;yBAChE;wBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC9B;iBACJ;aACJ;YAED,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,KAAqB,UAA0B,EAA1B,KAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;gBAA5C,IAAI,QAAQ,SAAA;gBACb,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;aAChD;SACJ;QAED,6BAAM,GAAN;YACI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEhDF,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1CA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,YAAY,EAAE,MAAM,EAAEA,UAAE,CAAC,WAAW,CAAC,CAAC;YACvDA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAErC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,iCAAU,GAAV,UAAW,MAAc;YACrB,KAAqB,UAA0B,EAA1B,KAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;gBAA5C,IAAI,QAAQ,SAAA;gBACb,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,UAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAI,UAAQ,IAAI,CAAC,EAAE;oBACfA,UAAE,CAAC,mBAAmB,CAClB,UAAQ;oBACR,IAAI,CAAC,IAAI;oBACTA,UAAE,CAAC,KAAK;oBACR,KAAK;oBACL,IAAI,CAAC,aAAa;oBAClB,IAAI,CAAC,MAAM;qBACd,CAAC;oBACFA,UAAE,CAAC,uBAAuB,CAAC,UAAQ,CAAC,CAAC;iBACxC;aACJ;SACJ;QAED,kCAAW,GAAX,UAAY,MAAa;YACrB,KAAoB,UAA0B,EAA1B,KAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAA1B,cAA0B,EAA1B,IAA0B,EAAC;gBAA3C,IAAI,QAAQ,SAAA;gBACZ,IAAI,UAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;gBACrD,IAAG,UAAQ,IAAE,CAAC,EAAC;oBACXA,UAAE,CAAC,wBAAwB,CAAC,UAAQ,CAAC,CAAC;iBACzC;aACJ;SACJ;QAED,8BAAO,GAAP;YACIA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACjB;QACL,mBAAC;IAAD,CAAC;;IC7ID;QAAA;YACY,gBAAW,GAAU,CAAC,CAAE;YACxB,UAAK,GAAUA,UAAE,CAAC,SAAS,CAAC;YAC5B,UAAK,GAAUA,UAAE,CAAC,cAAc,CAAC;YACjC,SAAI,GAAeA,UAAE,CAAC,YAAY,EAAE,CAAC;YACrC,gBAAW,GAAiB,IAAI,CAAC;SA6C5C;QA3CG,sBAAI,4BAAG;iBAAP;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;;;WAAA;QAED,sBAAI,mCAAU;iBAAd;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;WAAA;QAED,sBAAI,6BAAI;iBAAR;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QAED,sBAAI,6BAAI;iBAAR;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QAED,6BAAO,GAAP,UAAQ,IAAkB;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,4BAAM,GAAN;YACI,IAAG,IAAI,CAAC,WAAW,IAAE,IAAI,EAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBACtC,OAAO;aACV;;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAE,GAAG,CAAC;;YAE3C,IAAI,MAAM,GAAG,OAAO,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,GAAC,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,KAAK,GAAG,OAAO,GAAGA,UAAE,CAAC,aAAa,GAAGA,UAAE,CAAC,cAAc,CAAC;YAE5DA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,oBAAoB,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjDA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,oBAAoB,EAAC,MAAM,EAACA,UAAE,CAAC,WAAW,CAAC,CAAC;YAC7DA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,oBAAoB,EAAC,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,6BAAO,GAAP;YACIA,UAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;QACL,kBAAC;IAAD,CAAC;;;QC3CG,cAAY,YAA0B;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;SACvD;QAED,4BAAa,GAAb,UAAc,QAAgB,EAAE,IAAc;YAC1C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC9C;QAED,2BAAY,GAAZ,UAAa,IAAc;YACvB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;aACzC;YACD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,qBAAM,GAAN;YACI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;aAC9B;SACJ;QAED,qBAAM,GAAN,UAAO,MAAc;YACjBA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAEvD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAEtC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACf,IAAA,KAAkC,IAAI,CAAC,YAAY,EAAjD,GAAG,SAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,UAAU,gBAAsB,CAAC;gBACxDA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;gBAC5CA,UAAE,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3CA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACHA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aAClE;YAED,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACvCA,UAAE,CAAC,UAAU,CAACA,UAAE,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SACxC;QAED,sBAAO,GAAP;YACI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aAC/B;SACJ;QAEL,WAAC;IAAD,CAAC;;;;;;;;;;;;;;"}